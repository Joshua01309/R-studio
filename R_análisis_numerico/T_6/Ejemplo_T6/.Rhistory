knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
library(polynom)
f <- function(t,y){
y-t^2+1
}
df<-function(t,y){
-2*t+f(t,y)
}
my_taylor2 <- function(f, df, a,b N, y0){
f <- function(t,y){
y-t^2+1
}
df<-function(t,y){
-2*t+f(t,y)
}
my_taylor2 <- function(f, df, a,b N, y0){
f <- function(t,y){
y-t^2+1
}
df<-function(t,y){
-2*t+f(t,y)
}
dff<-function(t,y){
4*t+f(t,y)
}
my_taylor2 <- function(f, df,dff,  a,b N, y0){
f <- function(t,y){
y-t^2+1
}
df<-function(t,y){
-2*t+f(t,y)
}
dff<-function(t,y){
4*t+f(t,y)
}
my_taylor2 <- function(f, df,dff, a, b, N, y0){
h <- (b-a)/N
T <- a
W <- y0
for (k in 1:N) {
w_new <- W[k]+ h*f(T[k], W[k])+h^2/2*df()
T <- c(T, T[k]+h)
W <- c(W, w_new)
}
resultados <- list("T"=T, "W"=W)
return(resultados)
}
sol_aprox_2 <- my_taylor2(dy, 0, 2, 100, 0.5)
f <- function(t,y){
y-t^2+1
}
df<-function(t,y){
-2*t+f(t,y)
}
dff<-function(t,y){
4*t+f(t,y)
}
my_taylor2 <- function(f, df,dff, a, b, N, y0){
h <- (b-a)/N
T <- a
W <- y0
for (k in 1:N) {
w_new <- W[k]+ h*f(T[k], W[k])+h^2/2*df(T[k], W[k])+h^3/6*ddf(T[k], w[k])
T <- c(T, T[k]+h)
W <- c(W, w_new)
}
resultados <- list("T"=T, "W"=W)
return(resultados)
}
sol_aprox_2 <- my_taylor2(f, df, dff, 0, 2, 100, 0.5)
f <- function(t,y){
y-t^2+1
}
df<-function(t,y){
-2*t+f(t,y)
}
dff<-function(t,y){
4*t+f(t,y)
}
my_taylor2 <- function(f, df,dff, a, b, N, y0){
h <- (b-a)/N
T <- a
W <- y0
for (k in 1:N) {
w_new <- W[k]+ h*f(T[k], W[k])+h^2/2*df(T[k], W[k])+h^3/6*ddf(T[k], w[k])
T <- c(T, T[k]+h)
W <- c(W, w_new)
}
resultados <- list("T"=T, "W"=W)
return(resultados)
}
sol_aprox_2 <- my_taylor2(f, df, dff, 0, 2, 100, 0.5)
f <- function(t,y){
y-t^2+1
}
df<-function(t,y){
-2*t+f(t,y)
}
ddf<-function(t,y){
4*t+f(t,y)
}
my_taylor2 <- function(f, df,ddf, a, b, N, y0){
h <- (b-a)/N
T <- a
W <- y0
for (k in 1:N) {
w_new <- W[k]+ h*f(T[k], W[k])+h^2/2*df(T[k], W[k])+h^3/6*ddf(T[k], w[k])
T <- c(T, T[k]+h)
W <- c(W, w_new)
}
resultados <- list("T"=T, "W"=W)
return(resultados)
}
sol_aprox_2 <- my_taylor2(f, df, dff, 0, 2, 100, 0.5)
f <- function(t,y){
y-t^2+1
}
df<-function(t,y){
-2*t+f(t,y)
}
ddf<-function(t,y){
4*t+f(t,y)
}
my_taylor2 <- function(f, df,ddf, a, b, N, y0){
h <- (b-a)/N
T <- a
W <- y0
for (k in 1:N) {
w_new <- W[k]+ h*f(T[k], W[k])+h^2/2*df(T[k], W[k])+h^3/6*ddf(T[k], w[k])
T <- c(T, T[k]+h)
W <- c(W, w_new)
}
resultados <- list("T"=T, "W"=W)
return(resultados)
}
sol_aprox_2 <- my_taylor2(f, df, ddf, 0, 2, 100, 0.5)
f <- function(t,y){
y-t^2+1
}
df<-function(t,y){
-2*t+f(t,y)
}
ddf<-function(t,y){
4*t+f(t,y)
}
my_taylor2 <- function(f, df,ddf, a, b, N, y0){
h <- (b-a)/N
T <- a
W <- y0
for (k in 1:N) {
w_new <- W[k]+ h*f(T[k], W[k])+h^2/2*df(T[k], W[k])+h^3/6*ddf(T[k], w[k])
T <- c(T, T[k]+h)
W <- c(W, w_new)
}
resultados <- list("T"=T, "W"=W)
return(resultados)
}
sol_aprox_2 <- my_taylor2(f, df, ddf, 0, 2, 100, 0.5)
library(ggplot2)
f <- function(t,y){
y-t^2+1
}
df<-function(t,y){
-2*t+f(t,y)
}
ddf<-function(t,y){
4*t+f(t,y)
}
my_taylor2 <- function(f, df, ddf, a, b, N, y0){
h <- (b-a)/N
T <- a
W <- y0
for (k in 1:N) {
w_new <- W[k]+ h*f(T[k], W[k])+h^2/2*df(T[k], W[k])+h^3/6*ddf(T[k], W[k]) # corregido w[k] a W[k]
T <- c(T, T[k]+h)
W <- c(W, w_new)
}
resultados <- list("T"=T, "W"=W)
return(resultados)
}
sol_aprox_2 <- my_taylor2(f, df, ddf, 0, 2, 100, 0.5)
my_colors <- c("y(x)"="firebrick", "w(x)"="dodgerblue", "w_2(x)"="pink")
ggplot() +
geom_line(aes(sol_aprox_2$T, sol_aprox_2$W, color="w_2(x)")) + # correcciÃ³n de sol_aprox a sol_aprox_2
scale_color_manual(values=my_colors) +
labs(x="t", y="y(t)", color=" ") +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
library(polynom)
dy <- function(t,y){
y-t^2+1
}
y_sol <- function(t){
-exp(t)/2+(t+1)^2
}
my_euler <- function(dy, a,b, N, y0){
h <- (b-a)/N
T <- a
W <- y0
for (k in 1:N) {
w_new <- W[k]+ h*dy(T[k], W[k])
T <- c(T, T[k]+h)
W <- c(W, w_new)
}
resultados <- list("T"=T, "W"=W)
return(resultados)
}
# h <- 0.5
# T <- 0
# W <- 0.5
# t1 <- 0+h
# w1 <- 0.5+h*dy(0, 0.5)
# T <- c(T, t1)
# W <- c(W,w1)
#
# t2 <- t1+h
# w2 <- w1+h*dy(t1, w1)
# T <- c(T, t2)
# W <- c(W,w2)
#
# t3 <- t2+h
# w3 <- w2+h*dy(t2, w2)
# T <- c(T, t3)
# W <- c(W,w3)
#
#
# t4 <- t3+h
# w4 <- w3+h*dy(t3, w3)
# T <- c(T, t4)
# W <- c(W,w4)
sol_aprox <- my_euler(dy, 0, 2, 100, 0.5)
my_colors=c("y(x)"="firebrick", "w(x)"="dodgerblue")
ggplot()+
geom_function(aes(color="y(x)"),fun=y_sol, xlim=c(0,2))+
geom_line(aes(sol_aprox$T,sol_aprox$W, color="w(x)"))+
#geom_point(aes(sol_aprox$T,sol_aprox$W), color="green", size=3)+
scale_color_manual(values=my_colors)+
labs(x="t", y="y(t)", color=" ")+
theme_bw()
error_real <- y_sol(sol_aprox$T)-sol_aprox$W
M <- abs(-exp(2)/2+2)
L <- 1
h <- 0.02
cota <- h*M/(2*L)*(exp(L*(sol_aprox$T))-1)
graf_error <- ggplot()+
geom_line(aes(sol_aprox$T, error_real), color="gold")+
geom_point(aes(sol_aprox$T, error_real), color="red2")+
geom_line(aes(sol_aprox$T, cota), color="blue")+
theme_bw()
ggplotly(graf_error)
y_sol <- function(t){
1/25*exp(-2*t)+1/5*t*exp(3*t)-1/25*exp(3*t)
}
f <- function(t,y){
t*exp(3*t)-2*y
}
sol_aprox <- euler_heun(f, 0, 2, 0,n=10, improved = FALSE)
my_colors=c("y(x)"="firebrick", "w(x)"="dodgerblue")
ggplot()+
geom_function(aes(color="y(x)"),fun=y_sol, xlim=c(0,2))+
geom_line(aes(sol_aprox$t,sol_aprox$y, color="w(x)"))+
#geom_point(aes(sol_aprox$T,sol_aprox$W), color="green", size=3)+
scale_color_manual(values=my_colors)+
labs(x="t", y="y(t)", color=" ")+
theme_bw()
error_real <- y_sol(sol_aprox$t)-sol_aprox$y
M <- 3*exp(6)
L <- 2
h <- 0.2
cota <- h*M/(2*L)*(exp(L*(sol_aprox$t))-1)
graf_error <- ggplot()+
geom_line(aes(sol_aprox$t, error_real), color="gold")+
geom_point(aes(sol_aprox$t, error_real), color="red")+
geom_line(aes(sol_aprox$t, cota), color="blue")+
theme_bw()
ggplotly(graf_error)
y_sol <- function(t){
1/25*exp(-2*t)+1/5*t*exp(3*t)-1/25*exp(3*t)
}
f <- function(t,y){
t*exp(3*t)-2*y
}
sol_aprox <- euler_heun(f, 0, 2, 0,n=10, improved = FALSE)
my_colors=c("y(x)"="firebrick", "w(x)"="dodgerblue")
ggplot()+
geom_function(aes(color="y(x)"),fun=y_sol, xlim=c(0,2))+
geom_line(aes(sol_aprox$t,sol_aprox$y, color="w(x)"))+
#geom_point(aes(sol_aprox$T,sol_aprox$W), color="green", size=3)+
scale_color_manual(values=my_colors)+
labs(x="t", y="y(t)", color=" ")+
theme_bw()
error_real <- y_sol(sol_aprox$t)-sol_aprox$y
M <- 3*exp(6)
L <- 2
h <- 0.2
cota <- h*M/(2*L)*(exp(L*(sol_aprox$t))-1)
graf_error <- ggplot()+
geom_line(aes(sol_aprox$t, error_real), color="gold")+
geom_point(aes(sol_aprox$t, error_real), color="red")+
geom_line(aes(sol_aprox$t, cota), color="blue")+
theme_bw()
ggplotly(graf_error)
