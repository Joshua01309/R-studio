geom_function(aes(color="h=0.1"),fun=df_2,linewidth=0.25)+
xlim(0,15)+
scale_color_manual(values = color_Jesus)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
error_df_1<-function(x){abs(df(x)-df_1(x))}
grafica <- ggplot()+
geom_function(fun=error_df_1,color="black")+
xlim(0,15)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
f<-function(x){(3*x^{2}-4*x+4)/(4*x^{2}+5*x+6)}
grafica <- ggplot()+
geom_function(fun=f,color="red2",linewidth=0.75)+
xlim(0,15)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
df<-function(x){(31*x^{2}+4*x-44)/(4*x^{2}+5*x+6)^{2}}
df_1<-function(x){fderiv(f,x,method=c("central"))}
df_2<-function(x){fderiv(f,x,h=0.1,method=c("central"))}
color_Jesus<- c("f(x)"="firebrick", "h=0"="cyan", "h=0.1"="orange")
grafica <- ggplot()+
geom_function(aes(color="f(x)"),fun=df,linewidth=0.75)+
geom_function(aes(color="h=0"),fun=df_1,linewidth=0.25)+
geom_function(aes(color="h=0.1"),fun=df_2,linewidth=0.25)+
xlim(0,15)+
scale_color_manual(values = color_Jesus)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
error_df_1<-function(x){abs(df(x)-df_1(x))}
grafica <- ggplot()+
geom_function(fun=error_df_1,linewidth=0.75)+
xlim(0,15)+
scale_color_manual(values = color_Jesus)
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
error_df_1<-function(x){abs(df(x)-df_1(x))}
grafica <- ggplot()+
geom_function(fun=error_df_1,linewidth=0.75)+
xlim(0,15)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
f<-function(x){5-4*x^{-3}}
grafica<- geom()+
geom_function(fun=f, linewith=1.2, color="firebrick")+
stat_function(fun=f, geom="area", fill="green", alph=0.2)
f<-function(x){5-4*x^{-3}}
grafica<- ggplot()+
geom_function(fun=f, linewith=1.2, color="firebrick")+
stat_function(fun=f, geom="area", fill="green", alph=0.2)
xlim(-0.1,2.1)+
theme_bw()
f<-function(x){5-4*x^{-3}}
grafica<- ggplot()+
geom_function(fun=f, linewith=1.2, color="firebrick")+
stat_function(fun=f, geom="area", fill="green", alph=0.2)
xlim(0,5)+
xlabs(x,y)
f<-function(x){5-4*x^{-3}}
grafica<- ggplot()+
geom_function(fun=f, linewith=1.2, color="firebrick")+
stat_function(fun=f, geom="area", fill="green", alph=0.2)
xlim(0,5)+
xlabs(x="x",y="y")
f<-function(x){5-4*x^{-3}}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)
xlim(0,6)+
xlabs(x="x",y="y")
f<-function(x){5-4*x^{-3}}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)
xlim(0,6)+
labs(x="x",y="y")
f<-function(x){5-4*x^{-3}}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)
xlim(0,6)+
labs(x="x",y="y")+
theme_bw()
f<-function(x){5-4*x^{-3}}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(0,6)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
pracma::integral(f,0,6)
pracma::integral(f,0,5)
f<-function(x){5-4*x^{-3}}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(0,6)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
pracma::integral(f,0,6)
f<-function(x){(5-4*x^{-3}}
f<-function(x){(5-4*x^{-3})}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(0,6)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
pracma::integral(f,0,6)
library(ggplot2)
library(plotly)
f <- function(x) {
(5 - 4 * x^(-3))
}
grafica <- ggplot() +
geom_function(fun = f, color = "firebrick", linewidth = 1.2) +
stat_function(fun = f, geom = "area", fill = "green", alpha = 0.3) +
xlim(0, 6) +
labs(x = "x", y = "y") +
theme_bw()
ggplotly(grafica)
pracma::integral(f,0,6)
pracma::integral(f,0,10)
library(ggplot2)
library(plotly)
library(pracma)
f <- function(x) {
(5 - 4 * x^(-3))
}
grafica <- ggplot() +
geom_function(fun = f, color = "firebrick", linewidth = 1.2) +
stat_function(fun = f, geom = "area", fill = "green", alpha = 0.3) +
xlim(0, 6) +
labs(x = "x", y = "y") +
theme_bw()
ggplotly(grafica)
pracma::integral(f, 0, 6)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
library(polynom)
library(matlib)
library(RColorBrewer)
pracma::integral(f,0,6)
pracma::integral(f,0,4)
pracma::integral(f,0.5,6)
f<-function(x){(5-4*x^{-3})}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(0.5,6)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
f<-function(x){(5-4*x^{-3})}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(1,6)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
pracma::integral(f,1,6)
x<-rnorm(100)
y<-5*x+rnorm(100, mean=0, sd=2)
b1<-sum((x-mean(x))*(Y-mean(y)))/sum(x-mean(x)^{2})
# Datos
datos <- c(34, 26, 38, 24, 65, 32, 44, 35, 26, 73, 98, 78, 65, 25, 43, 56, 76, 21, 45, 33, 78, 87, 45, 22, 18, 93, 45, 87, 56, 66)
# Definir los límites de las clases
clases <- c(0, 32, 46, 60, 74, 88, 102)
# Crear el histograma
histograma <- hist(datos, breaks = clases, main = "Histograma", xlab = "Valores", ylab = "Frecuencia", col = "skyblue", border = "white")
# Mostrar el histograma
plot(histograma)
# Frecuencias
frecuencias <- c(10, 9, 3, 4, 4, 3)
# Definir los límites de las clases
clases <- c(0, 32, 46, 60, 74, 88, 102)
# Crear el histograma con las frecuencias
histograma <- barplot(frecuencias, names.arg = clases[-length(clases)], main = "Histograma", xlab = "Valores", ylab = "Frecuencia", col = "skyblue", border = "white")
# Agregar leyenda
legend("topright", legend = c("0 < x < 32", "32 < x < 46", "46 < x < 60", "60 < x < 74", "74 < x < 88", "88 < x < 102"), fill = "skyblue", border = "white")
# Mostrar el histograma
# Frecuencias
frecuencias <- c(10, 9, 3, 4, 4, 3)
# Definir los límites de las clases
clases <- c(0, 32, 46, 60, 74, 88, 102)
# Crear el histograma con las frecuencias
histograma <- barplot(frecuencias, names.arg = clases[-length(clases)], main = "Histograma", xlab = "Valores", ylab = "Frecuencia", col = "skyblue", border = "white")
# Agregar leyenda
legend("topright", legend = c("0 < x < 32", "32 < x < 46", "46 < x < 60", "60 < x < 74", "74 < x < 88", "88 < x < 102"), fill = "skyblue", border = "white")
# Agregar números de clase
text(histograma, frecuencias, labels = frecuencias, pos = 3, cex = 0.8, col = "black")
# Calcular la frecuencia acumulada
frecuencia_acumulada <- cumsum(frecuencias)
# Agregar la línea poligonal de frecuencia acumulada
lines(histograma, frecuencia_acumulada, type = "l", col = "red")
# Mostrar el histograma
# Frecuencias
frecuencias <- c(10, 9, 3, 4, 4, 3)
clases <- c(18, 32, 46, 60, 74, 88, 102)
histograma <- barplot(frecuencias, names.arg = clases[-length(clases)], main = "Histograma", xlab = "Valores", ylab = "Frecuencia", col = "skyblue", border = "white")
legend("topright", legend = c("0 < x < 32", "32 < x < 46", "46 < x < 60", "60 < x < 74", "74 < x < 88", "88 < x < 102"), fill = "skyblue", border = "white")
text(histograma, frecuencias, labels = frecuencias, pos = 3, cex = 0.8, col = "black")
# Calcular la frecuencia acumulada
frecuencia_acumulada <- cumsum(frecuencias)
lines(histograma, frecuencia_acumulada, type = "l", col = "red")
lines(histograma, frecuencia_acumulada, type = "l", col = "red")
# Frecuencias
frecuencias <- c(10, 9, 3, 4, 4, 3)
# Definir los límites de las clases
clases <- c(0, 32, 46, 60, 74, 88, 102)
# Crear el histograma con las frecuencias
histograma <- barplot(frecuencias, names.arg = clases[-length(clases)], main = "Histograma", xlab = "Valores", ylab = "Frecuencia", col = "skyblue", border = "white")
# Agregar leyenda
legend("topright", legend = c("0 < x < 32", "32 < x < 46", "46 < x < 60", "60 < x < 74", "74 < x < 88", "88 < x < 102"), fill = "skyblue", border = "white")
# Agregar números de clase
text(histograma, frecuencias, labels = frecuencias, pos = 3, cex = 0.8, col = "black")
# Calcular la frecuencia acumulada
frecuencia_acumulada <- cumsum(frecuencias)
# Calcular los puntos para la línea poligonal
puntos <- data.frame(x = histograma, y = frecuencia_acumulada)
# Agregar la línea poligonal de frecuencia acumulada
lines(puntos$x, puntos$y, type = "b", col = "red")
# Mostrar el histograma
# Agregar la línea poligonal de frecuencias
lines(
c(clases[1], clases[-length(clases)] + 0.5, clases[length(clases)]),
c(0, frecuencias, 0),
col = "red",
lty = 2,
lwd = 2,
type = "l",
# Agregar leyenda a la línea
legend = "Frecuencias"
)
# Crear el histograma
histograma <- barplot(frecuencias,
names.arg = clases[-length(clases)],
main = "Histograma",
xlab = "Valores",
ylab = "Frecuencia",
col = "skyblue",
border = "white")
# Agregar leyenda
legend("topright",
legend = c("0 < x < 32", "32 < x < 46", "46 < x < 60", "60 < x < 74", "74 < x < 88", "88 < x < 102"),
fill = "skyblue",
border = "white")
# Agregar la línea poligonal de frecuencias
lines(
c(clases[1], clases[-length(clases)] + 0.5, clases[length(clases)]),
c(0, frecuencias, 0),
col = "red",
lty = 2,
lwd = 2,
type = "l"
)
# Agregar leyenda a la línea poligonal
legend("topright",
legend = c("Frecuencias"),
col = "red",
lty = 2,
lwd = 2)
# Mostrar el histograma
# Calcular puntos medios de las clases
puntos_medios <- (clases[-1] + clases[-length(clases)]) / 2
# Crear el histograma
histograma <- barplot(frecuencias,
names.arg = clases[-length(clases)],
main = "Histograma",
xlab = "Valores",
ylab = "Frecuencia",
col = "skyblue",
border = "white")
# Agregar leyenda
legend("topright",
legend = c("0 < x < 32", "32 < x < 46", "46 < x < 60", "60 < x < 74", "74 < x < 88", "88 < x < 102"),
fill = "skyblue",
border = "white")
# Agregar la línea poligonal de frecuencias
lines(
puntos_medios,
frecuencias,
col = "red",
lty = 2,
lwd = 2,
type = "l"
)
# Agregar leyenda a la línea poligonal
legend("topright",
legend = c("Frecuencias"),
col = "red",
lty = 2,
lwd = 2)
# Mostrar el histograma
# Frecuencias
frecuencias <- c(10, 9, 3, 4, 4, 3)
# Definir los límites de las clases
clases <- c(18, 32, 46, 60, 74, 88, 102)
# Crear el histograma con las frecuencias
histograma <- barplot(frecuencias, names.arg = clases[-length(clases)], main = "Histograma", xlab = "Valores", ylab = "Frecuencia", col = "skyblue", border = "white")
# Agregar leyenda
legend("topright", legend = c("0 < x < 32", "32 < x < 46", "46 < x < 60", "60 < x < 74", "74 < x < 88", "88 < x < 102"), fill = "skyblue", border = "white")
# Agregar números de clase
text(histograma, frecuencias, labels = frecuencias, pos = 3, cex = 0.8, col = "black")
# Calcular la frecuencia acumulada
frecuencia_acumulada <- cumsum(frecuencias)
# Calcular los puntos para la línea poligonal
puntos <- data.frame(x = histograma, y = frecuencia_acumulada)
# Agregar la línea poligonal de frecuencia acumulada
lines(puntos$x, puntos$y, type = "b", col = "red")
# Mostrar el histograma
# Datos
datos <- c(34, 26, 38, 24, 65, 32, 44, 35, 26, 73, 98, 78, 65, 25, 43, 56, 76, 21, 45, 33, 78, 87, 45, 22, 18, 93, 45, 87, 56, 66)
# Crear el boxplot
boxplot(datos, main = "Boxplot de Datos",
ylab = "Valores", col = "lightblue", border = "blue")
# Datos
datos <- c(34, 26, 38, 24, 65, 32, 44, 35, 26, 73, 98, 78, 65, 25, 43, 56, 76, 21, 45, 33, 78, 87, 45, 22, 18, 93, 45, 87, 56, 66)
# Crear el gráfico de tallo y hoja
stem(datos)
f<-function(x){6*x^{2}-2*cos(x)}
grafica <- ggplot()+
geom_function(fun=f,color="red2",linewidth=0.75)+
xlim(0,15)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
df<-function(x){12*x+2*sin(x)}
df_1<-function(x){fderiv(f,x,method=c("central"))}
df_2<-function(x){fderiv(f,x,h=0.1,method=c("central"))}
color_Jesus<- c("f(x)"="firebrick", "h=0"="cyan", "h=0.1"="orange")
grafica <- ggplot()+
geom_function(aes(color="f(x)"),fun=df,linewidth=0.75)+
geom_function(aes(color="h=0"),fun=df_1,linewidth=0.25)+
geom_function(aes(color="h=0.1"),fun=df_2,linewidth=0.25)+
xlim(0,15)+
scale_color_manual(values = color_Jesus)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
error_df_1<-function(x){abs(df(x)-df_1(x))}
grafica <- ggplot()+
geom_function(fun=error_df_1,linewidth=0.75)+
xlim(0,15)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
f<-function(x){20*exp(x)+11*log(x)}
grafica <- ggplot()+
geom_function(fun=f,color="red2",linewidth=0.75)+
xlim(0,15)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
df<-function(x){20*exp(x)+11/x}
df_1<-function(x){fderiv(f,x,method=c("central"))}
df_2<-function(x){fderiv(f,x,h=0.1,method=c("central"))}
color_Jesus<- c("f(x)"="firebrick", "h=0"="cyan", "h=0.1"="orange")
grafica <- ggplot()+
geom_function(aes(color="f(x)"),fun=df,linewidth=0.75)+
geom_function(aes(color="h=0"),fun=df_1,linewidth=0.25)+
geom_function(aes(color="h=0.1"),fun=df_2,linewidth=0.25)+
xlim(0,15)+
scale_color_manual(values = color_Jesus)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
error_df_1<-function(x){abs(df(x)-df_1(x))}
grafica <- ggplot()+
geom_function(fun=error_df_1,linewidth=0.75)+
xlim(0,15)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
?sinh
f<-function(x){sinh(x)*tanh(x)}
grafica <- ggplot()+
geom_function(fun=f,color="red2",linewidth=0.75)+
xlim(0,15)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
f<-function(x){sinh(x)*tanh(x)}
grafica <- ggplot()+
geom_function(fun=f,color="red2",linewidth=0.75)+
xlim(0,15)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
f<-function(x){sinh(x)*tanh(x)}
grafica <- ggplot()+
geom_function(fun=f,color="red2",linewidth=0.75)+
xlim(0,15)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
df<-function(x){sech(x)^2*sinh(x)+cosh(x)*tanh(x)}
df_1<-function(x){fderiv(f,x,method=c("central"))}
df_2<-function(x){fderiv(f,x,h=0.1,method=c("central"))}
color_Jesus<- c("f(x)"="firebrick", "h=0"="cyan", "h=0.1"="orange")
grafica <- ggplot()+
geom_function(aes(color="f(x)"),fun=df,linewidth=0.75)+
geom_function(aes(color="h=0"),fun=df_1,linewidth=0.25)+
geom_function(aes(color="h=0.1"),fun=df_2,linewidth=0.25)+
xlim(0,15)+
scale_color_manual(values = color_Jesus)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
error_df_1<-function(x){abs(df(x)-df_1(x))}
grafica <- ggplot()+
geom_function(fun=error_df_1,linewidth=0.75)+
xlim(0,15)+
labs(x="x",y="y")+
theme_classic()
ggplotly(grafica)
f<-function(x){(5-4*x^{-3})}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(0.1,6)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
pracma::integral(f,0.1,6)
f<-function(x){(5-4*x^{-3})}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim((100)^{1/3}/5,6)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
pracma::integral(f,0.1,6)
pracma::integral(f,(100)^{1/3}/5,6)
f<-function(x){(5-4*x^{-3})}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(1,4)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
pracma::integral(f,1,4)
f<-function(x){x^{7}-4*x^{4}+6*x}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(2,8)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
pracma::integral(f,2,8)
f<-function(x){x(-9*(x)^{1/3}-7*(x)^{4})}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(0,1)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
f<-function(x){x*(-9*(x)^{1/3}-7*(x)^{4})}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(0,1)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
f<-function(x){x*(-9*(x)^{1/3}-7*(x)^{4})}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(0,1)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
pracma::integral(f,0,1)
pracma::integralabs((f,0,1))
pracma::integralabs(f,0,1)
pracma::integral(f,0,1)
f<-function(x){2*exp(x)+7*cos(x)}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(0,1)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
pracma::integral(f,0,1)
f<-function(x){-7*x*csc(x)^{2}}
grafica<- ggplot()+
geom_function(fun=f, color="firebrick", linewith=1.2)+
stat_function(fun=f, geom="area", fill="green", alph=0.3)+
xlim(pi/4,pi/2)+
labs(x="x",y="y")+
theme_bw()
ggplotly(grafica)
pracma::integral(f,pi/4,pi/2)
