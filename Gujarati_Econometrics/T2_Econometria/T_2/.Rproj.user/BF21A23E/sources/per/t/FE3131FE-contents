---
title: "Ejemplo aplicando diferentes modelos"
date: "Mayo 2024"
output: 
  html_document:
    toc: true
    toc_depth: 1
    theme: darkly
---


<style>
body {
text-align: justify}
</style>




```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(discrtr) # A companion package for the book Introduction to Discrete Choice Analysis with `R`
library(gplots) # Various R Programming Tools for Plotting Data
library(ggmosaic) # Mosaic Plots in the 'ggplot2' Framework
library(treemapify)
library(ggridges)
library(ggalluvial)
library(kableExtra)
library(plotly)
library(mlogit)
library(gridExtra)
library(evd)
library(AER)
library(gmnl)
#install.packages("remotes")
#remotes::install_github("mauricio1986/gmnl")
```


Tareas Teoría de Decisiones: 


1. Ejercicios  3, 4 y 5 del Capítulo 2.

2. Ejercicios Capítulo 5.

3. Ejemplos realizados el 23 de mayo.

Subir los archivos a su cuenta de GitHub a más tardar el sábado 25 de mayo.


# Conjunto de datos ModeCanada

Trabajaremos con los datos *ModeCanada* del package *mlogit* el cual consiste de las opciones de transporte entre Montreal y Toronto.   Está en formato por longitud con las siguientes variables: 


* case: the individual index,

* alt: the alternative, one of train, car, bus and air,

* choice: one if the mode is chosen, zero otherwise,

* cost: monetary cost,

* ivt: in vehicule time,

* ovt: out vehicule time,

* frequency: frequency,

* income: income,

* urban: urban,

* noalt: the number of alternatives available.

```{r}
data("ModeCanada", package = "mlogit")
glimpse(ModeCanada)
```

Cambiamos el tipo de algunas variables:

```{r}
ModeCanada$dist <- as.numeric(ModeCanada$dist)
ModeCanada$income <- as.numeric(ModeCanada$income)
```



Observamos que no todas las personas tienen todas las alternativas disponibles,  se filtra un subconjunto con disponibilidad completa:


```{r}
ModeCanadafilter <- ModeCanada |> filter(noalt == 4)

MC <- mlogit.data(ModeCanada |> 
filter(noalt == 4),
choice = "choice",
shape = "long",
alt.levels = c("air",
"train",
"bus",
"car"))
```


## Gráficas

```{r}
ggplot(ModeCanadafilter |> filter(choice==1))+
  geom_bar(aes(alt, fill=alt), color="black", show.legend = FALSE)+
  theme_bw()
```

```{r}
ggplot(ModeCanadafilter)+
  geom_boxplot(aes(alt, cost, color=alt), show.legend = FALSE)+
  theme_bw()
```


```{r}
ggplot(ModeCanadafilter)+
  geom_boxplot(aes(alt, ivt, color=alt), show.legend = FALSE)+
  theme_bw()
```

```{r}
ggplot(ModeCanadafilter)+
  geom_boxplot(aes(alt, ovt, color=alt), show.legend = FALSE)+
  theme_bw()
```



## Modelo logit considerando el costo


```{r}
ml1 <- mlogit(choice ~ cost, MC)
summary(ml1)
```

## Modelo logit considerando el costo, ivt y ovt


```{r}
ml2 <- mlogit(choice ~ cost+ivt+ovt, MC)
summary(ml2)
```

## Modelo logit multinomial, considerando dist como atributo del decisor

```{r}
ml3 <- mlogit(choice~ cost+ivt+ovt|dist, MC)
summary(ml3)
```
## Modelo logit multinomial, considerando dist como atributo del decisor y coeficientes específicos para costo

```{r}
ml4 <- mlogit(choice~ ivt+ovt|0|cost, MC)
summary(ml4)
```

## Modelo anidado: Set1 (rápido) y set2(lento).

```{r}
nl1 <- mlogit(choice ~ cost+ivt+ovt, MC, nests = list(set1=c('air', 'car'), set2 = c('train', 'bus')), steptol=1e-12)

summary(nl1)
```






# Conjunto de datos TravelMode

Consideremos los datos *TravelMode* del package *AER* el cual consiste de las opciones de transporte entre Sidney y Melbourne.   Está en formato por longitud con las siguientes variables: 

* individual: Factor indicating individual with levels 1 to 210.

* mode: Factor indicating travel mode with levels "car", "air", "train", or "bus".

* choice: Factor indicating choice with levels "no" and "yes".

* wait: Terminal waiting time, 0 for car.

* vcost: Vehicle cost component.

* travel: Travel time in the vehicle.

* gcost: Generalized cost measure.

* income: Household income.

* size: Party size.

```{r}
data("TravelMode", package = "AER")
glimpse(TravelMode)
```




Cambiamos la clase del conjunto de datos:

```{r}
TM <- mlogit.data(TravelMode,
choice = "choice",
shape = "long",
alt.levels = c("air",
"train",
"bus",
"car"))
```

# Gráficas

```{r}
ggplot(TravelMode |> filter(choice=="yes"))+
  geom_bar(aes(mode, fill=mode), show.legend = FALSE)+
  theme_classic()
```

```{r}
ggplot(TravelMode |> filter(choice=="yes"))+
  geom_boxplot(aes(mode, wait, fill=mode), show.legend = FALSE, color="black")+
  theme_classic()
```




```{r}
ggplot(TravelMode |> filter(choice=="yes"))+
  geom_boxplot(aes(mode, travel, fill=mode), show.legend = FALSE, color="black")+
  theme_classic()
```

## Agregar los modelos logit (al menos 3)

## Modelo logit considerando vcost

```{r}
ml10 <- mlogit(choice ~ vcost, TM)
summary(ml10)
```

## Modelo logit considerando vcost, wait, Travel

```{r}
ml20 <- mlogit(choice ~ vcost+wait+travel, TM)
summary(ml20)
```
## Modelo logit multinomial, considerando income como atributo del decisor

```{r}
ml30 <- mlogit(choice~ vcost+wait+travel|income, TM)
summary(ml30)
```

## Modelo logit multinomial de preferencia de viaje con coeficientes de costo


```{r}
ml40 <- mlogit(choice~ wait+travel|0|vcost, TM)
summary(ml40)
```



## Modelo anidado: Set1 (lento) y set2(rápido).

```{r}
nl2 <- mlogit(choice ~ vcost+wait, TM, nests = list(set1=c('bus', 'train'), set2 = c( 'air', 'car')), steptol=1e-12)

summary(nl2)
```
¿Qué significa que iv sea negativo?
cuando el costo o el tiempo de espera aumentan, las personas tienden a elegir menos las opciones de transporte dentro de esos conjuntos " set1=c('bus', 'train'), set2 = c( 'air', 'car')" . Por ejemplo, si el costo de viajar en autobús o tren aumenta, es menos probable que las personas elijan viajar de esa manera. Lo mismo ocurre si el tiempo de espera aumenta; las personas también son menos propensas a elegir esas opciones de transporte.





Los modelos de clase latente tuve que suprimirlos ya que el paquete removes no me lo cargaba bien tuve que reiniciar RStudio aproximadamente 7 veces en la consola decia removes succefully pero no lo hagarraba


## Modelo de clases latentes (Q=2), considerando costo

```{r}
#lc1 <- gmnl(choice ~ vcost| 0 | 0 | 0 | 1, data = TM, model = 'lc', Q = 2, panel = FALSE,  method = "bhhh")
#summary(lc1)
```

## Modelo de clases latentes (Q=2), considerando costo + wait + travel


```{r}
#lc1 <- gmnl(choice ~ vcost+ wait| 0 | 0 | 0 | 1, data = TM, model = 'lc', Q = 2, panel = FALSE,  method = "bhhh")
#summary(lc1)
```



## Agregar Logit Mixto (notas capítulo 10)

Paral ilustar el modelo logit mixto se utilizará un conjunto de datos contenido en el package AER (Applied Econometrics with R), que consiste en el modo de transporte entre Sydney y Melbourne. El conjunto de datos es llamado TravelMode,

```{r}
data("TravelMode", package = "AER")
head(TravelMode)
```


```{r}
Proportion <- TravelMode %>% filter(choice == "yes") %>% select(mode) %>% group_by(mode) %>%
              summarise(no_rows = length(mode))

# Calculate the median of the variables
df <- TravelMode %>% group_by(mode) %>% summarize(vcost = median(vcost), wait = median(wait), travel = median(travel))

# Calculate proportions
df$Proportion <- Proportion$no_rows/(nrow(TravelMode)/4)

df %>% kable(digits = 3) %>% kable_styling()
```

Además, el conjunto de datos incluye dos atributos del decisor, el ingreso (en 10,000) y el tamaño del grupo de viaje (número de personas en el grupo). El conjunto de datos está en formato por longitud, luego, existe una observación para cada alternativa que tiene un decisor. Se asigna al conjunto de datos el formato requerido para trabajar con los packages mlogit y gmnl,

```{r}
TM <- mlogit.data(TravelMode, choice = "choice", shape = "long",
                  alt.levels = c("air", "train", "bus", "car"))
#Multinomial logit
mnl0 <- mlogit(choice ~ vcost + travel + wait | 1, data = TM)

#Nested logit:
nl <- mlogit(choice ~ vcost + travel + wait | 1, data = TM,
             nests = list(land = c( "car", "bus", "train"), air = c("air")), un.nest.el = TRUE)

#Multinomial probit:
prbt <- mlogit(choice ~ vcost + travel + wait | 1, data = TM, probit = TRUE)

# Estimate a constants only model to calculate McFadden's _adjusted_ rho2
mnl_null_lo = -283.83

mnl0.summary <- rownames_to_column(data.frame(summary(mnl0)$CoefTable), "Variable") %>%
                transmute(Variable, Estimate, pval = `Pr...z..`)

nl.summary <- rownames_to_column(data.frame(summary(nl)$CoefTable), "Variable") %>%
              transmute(Variable, Estimate, pval = `Pr...z..`)

prbt.summary <- rownames_to_column(data.frame(summary(prbt)$CoefTable), "Variable") %>%
transmute(Variable, Estimate, pval = `Pr...z..`)

# Join summary tables
df_logit <- mnl0.summary %>% full_join(nl.summary, by = "Variable") %>% full_join(prbt.summary, by = "Variable")

kable(df_logit, "html", digits = 4, col.names = c("Variable", "Estimate", "p-value", "Estimate", "p-value",
                                                  "Estimate","p-value"),
      caption = "Base models: multinomial logit (MNL), nested logit (NL), 
                multinomial probit (MNP)") %>%
      kable_styling() %>% add_header_above(c(" " = 1, "MNL" = 2, "NL" = 2, "MNP" = 2)) %>%
      footnote(general = c(paste0("Log-Likelihood: MNL = ", round(mnl0$logLik[1], digits = 3),"; NL = ",
               round(nl$logLik[1], digits = 3), "; MNP = ", round(prbt$logLik[1], digits = 3)),
               paste0("McFadden Adjusted Rˆ2: MNL = ", round(1 - (mnl0$logLik[1] - nrow(mnl0.summary)) /
               mnl_null_lo, digits = 3),"; NL = ", round(1 - (nl$logLik[1] - nrow(nl.summary)) /
               mnl_null_lo, digits = 3), "; MNP = ", round(1 - (prbt$logLik[1] - nrow(prbt.summary)) /
               mnl_null_lo, digits = 3))))


```


El modelo logit anidado y el modelo probit multinomial, como se expuso previamente, identifican correlaciones entre alternativas. Recordemos que el coeficiente del valor inclusivo del modelo logit anidado está entre 0 y 1, y es significativamente diferente de 1 (cuando el coeficiente del valor inclusivo está cerca de uno, el modelo es equivalente al modelo logit multinomial). El 
-score para probar si es diferente de uno es

```{r}
(nl$coefficients["iv"] - 1) / sqrt(vcov(nl)["iv","iv"])
```

Con 
, el valor 
 indica que podemos rechazar la hipótesis nula de que 
. El modelo probit multinomial también tiene componentes de covarianza que son significativas, aunque, como se analizó en capítulos previos, estas covarianzas carecen de una interpretación sustantiva.

Con base en los resultados de los modelos, podemos obtener algunas ideas de comportamiento. Recordemos que la razón de dos coeficientes representa la disposición a pagar, si usamos los coeficientes del modelo logit anidado (que parece ser el mejor modelo en el ejemplo), podemos ver que la disposición a pagar es de 
 dólares por minuto de tiempo de viaje ahorrado y de 
 dólares por minuto de tiempo de espera ahorrado.
 
 
```{r}
as.numeric(nl$coefficients["travel"])/as.numeric(nl$coefficients["vcost"])
as.numeric(nl$coefficients["wait"])/as.numeric(nl$coefficients["vcost"])

```



Para un ejemplo práctico, se estiman tres modelos logit mixtos utilizando las variables  Los modelos son los siguientes.

```{r}
# MIXL T
mixl_t <- gmnl(choice ~ income + gcost + size | 1, data = TM, model = "mixl",
               ranp = c(gcost = "n"), R = 50)

mixl_t$logLik$message

# MIXL W
mixl_w <- gmnl(choice ~ income + gcost + size | 1, data = TM, model = "mixl",
               ranp = c(size = "n"), R = 50)

mixl_w$logLik$message

# MIXL T&W
mixl <- gmnl(choice ~ income + gcost + size | 1, data = TM, model = "mixl",
             ranp = c(gcost = "n", size = "n"), R = 60)

mixl$logLik$message

# Estimate a constants only model to calculate McFadden's _adjusted_ rho2
mixl0 <- gmnl(choice ~ 1, data = TM, model = "mnl")

mixl_t.summary <- rownames_to_column(data.frame(summary(mixl_t)$CoefTable), "Variable") %>%
                  transmute(Variable, Estimate, pval = `Pr...z..`)

mixl_w.summary <- rownames_to_column(data.frame(summary(mixl_w)$CoefTable), "Variable") %>%
                  transmute(Variable, Estimate, pval = `Pr...z..`)

mixl.summary <- rownames_to_column(data.frame(summary(mixl)$CoefTable), "Variable") %>%
                transmute(Variable, Estimate, pval = `Pr...z..`)

mixl_table_1 <- full_join(mixl_t.summary, mixl_w.summary, by = "Variable") %>%
                full_join(mixl.summary, by = "Variable")

kable(mixl_table_1, "html", digits = 4, col.names = c("Variable", "Estimate", "p-value", "Estimate",
      "p-value", "Estimate", "p-value"), caption = "Mixed logit models",) %>%
kable_styling() %>% add_header_above(c(" " = 1, "MIXL T" = 2, "MIXL W" = 2, "MIXL T&W" = 2)) %>%
footnote(general = c(paste0("Log-Likelihood: MIXL T = ", round(mixl_t$logLik$maximum, digits = 3),
         "; MIXL W = ", round(mixl_w$logLik$maximum, digits = 3), "; MIXL T&W = ",
         round(mixl$logLik$maximum, digits = 3)),
# Calculate McFadden's rho-2
         paste0("McFadden Adjusted Rˆ2: MIXL T = ", round(1 - (mixl_t$logLik$maximum - nrow(mixl_t.summary)) /
         mixl0$logLik$maximum, digits = 3), "; MIXL W = ", round(1 - (mixl_w$logLik$maximum - nrow(mixl_w.summary)) /
         mixl0$logLik$maximum, digits = 3), "; MIXL T&W = ", round(1 - (mixl$logLik$maximum - nrow(mixl.summary)) /
         mixl0$logLik$maximum, digits = 3))))



```

En el contexto de los modelos de regresión logística multinomial mixtos (MIXL), el valor de Log-Likelihood indica la máxima verosimilitud del modelo ajustado a los datos. En este caso, los valores son: -269.892 para MIXL T, -269.878 para MIXL W y -269.755 para MIXL T&W. Cuanto más cercano sea el valor de Log-Likelihood a cero, mejor se ajusta el modelo a los datos.

El McFadden Adjusted Rˆ2 es una medida de ajuste del modelo que compara el modelo ajustado con un modelo nulo. Un valor más alto indica un mejor ajuste del modelo a los datos. En este caso, los valores son: 0.024 para MIXL T, 0.024 para MIXL W y 0.021 para MIXL T&W. Estos valores sugieren que los modelos explican una proporción relativamente pequeña de la variabilidad en los datos, lo que puede indicar que otros factores no incluidos en los modelos podrían influir en la elección del modo de transporte.










Dados los parámetros estimados previamente, podemos graficar la distribución del coeficiente aleatorio. Primero se crea un conjunto de datos con valores simulados obtenidos de la distribución aleatoria

```{r}
# Retrieve the estimated parameters
mu <- coef(mixl_w)['size']
sigma <- coef(mixl_w)['sd.size']

# Create a data frame for plotting
df <- data.frame(x =seq(from = -0.6, to = 0.2, by = 0.005)) %>%
# Draw from the normal distribution for x given the mean and sd
      mutate(normal = dnorm(x, mean = mu, sd = sigma))

# Same, but only positive values of x
df_p <- data.frame(x = seq(from = 0, to = 0.2, by = 0.005)) %>%
        mutate(normal = dnorm(x, mean = mu, sd = sigma))

# Plot
ggplot() +
# Plot the distribution
   geom_area(data = df, aes(x = x, y = normal), fill = "#3F8BBA", alpha = 0.5) +
# Plot the distribution for positive values of x only
   geom_area(data = df_p, aes(x = x, y = normal), fill = "#6FAA66", alpha = 0.5) +
   geom_hline(yintercept = 0) + # Add y axis
   geom_vline(xintercept = 0) + # Add x axis
   ylab("f(x)") + # Label the y axis
   xlab(expression(beta[n][size])) + # Label the x axis
   ggtitle("Unconditional distribution for size parameter")

1 - pnorm(0, mean = coef(mixl_w)['size'], sd = coef(mixl_w)['sd.size'])


```

En el contexto de este código, el parámetro size hace referencia al tamaño de un grupo de personas que viajan juntas. La distribución incondicional del parámetro de tamaño significa que la distribución no está condicionada a ningún otro factor, como el tipo de transporte que se utiliza o el destino del viaje.

La imagen muestra una curva en forma de campana, que es típica de una distribución normal. La media de la distribución es aproximadamente 0, lo que significa que el tamaño medio del grupo es de 1 persona. La desviación estándar de la distribución es aproximadamente 0.2, lo que significa que hay una buena cantidad de variación en el tamaño del grupo.

El hecho de que la distribución se centre en 1 persona sugiere que la mayoría de las personas viajan solas o en grupos pequeños. Sin embargo, también hay una cola significativa a la derecha de la distribución, lo que significa que hay algunos grupos que son bastante grandes.

 Otra manera de formularlo es la siguiente


```{r}
1 - pnorm(-coef(mixl_w)['size'] / coef(mixl_w)['sd.size'])
```





```{r}

mu <- coef(mixl_w)['size'] / coef(mixl_w)['vcost']
sigma <- sqrt(coef(mixl_w)['sd.size']^2/ coef(mixl_w)['vcost']^2)
# Create a data frame for plotting
df <- data.frame(x =seq(from = -10, to = 30, by = 0.1)) %>%
mutate(normal = dnorm(x, mean = mu, sd = sigma))

```


```{r}
# Plot
ggplot() +
geom_area(data = df, aes(x, normal), fill = "#EB6349", alpha = 0.5) +
# geom_area(data = df_p, aes(x, normal), fill = "orange", alpha = 0.5) +
#ylim(c(0, 1/(2 * L) + 0.2 * 1/(2 * L))) + # Set the limits of the y axis
geom_hline(yintercept = 0) + # Add y axis
geom_vline(xintercept = 0) + # Add x axis
ylab("f(x)") + # Label the y axis
xlab(expression(WTP[n][size])) + # Label the x axis
ggtitle("Unconditional distribution of willingness to pay for people traveling together")
```

```{r}
# Define parameters for the distribution of willingness to pay
mu <- coef(mixl_w)['wait'] / coef(mixl_w)['vcost']
sigma <- sqrt(coef(mixl_w)['sd.wait']^2/ coef(mixl_w)['vcost']^2)
# Create a data frame for plotting
df <- data.frame(x =seq(from = -10, to = 30, by = 0.1)) %>%
mutate(normal = dnorm(x, mean = mu, sd = sigma))

# Plot
ggplot() +
geom_area(data = df, aes(x, normal), fill = "orange", alpha = 0.5) +
# geom_area(data = df_p, aes(x, normal), fill = "orange", alpha = 0.5) +
#ylim(c(0, 1/(2 * L) + 0.2 * 1/(2 * L))) + # Set the limits of the y axis
geom_hline(yintercept = 0) + # Add y axis
geom_vline(xintercept = 0) + # Add x axis
ylab("f(x)") + # Label the y axis
xlab(expression(WTP[n][wait])) + # Label the x axis
ggtitle("Unconditional distribution for willingness to pay for wait")

```

 no se ven las graficas.....
 
 
 
 
 



Las distribuciones recién mostradas (para 
 y para la disposición a pagar) son para la población utilizada para estimar el modelo. La distribución es informativa sobre las preferencias de la población; por ejemplo, vimos que aproximadamente el 
 de la población tiene una preferencia positiva por el tiempo de espera. Una pregunta es si esa preferencia varía según el viajero. ¿Podría ser que los viajeros aéreos tengan una mayor preferencia por el tiempo de espera que las personas que viajan en autobús? Después de todo, los aeropuertos son más glamurosos que las estaciones de autobús (y los viajes en avión son más populares que los viajes en autobús, como vimos en las preferencias de modos de viaje). Train (2009) describe un procedimiento para simular la distribución de coeficientes aleatorios condicionados respecto a las elecciones de los individuos de la muestra. Esta distribución es proporcional a la densidad del coeficiente para la población, multiplicada por la probabilidad de elegir la alternativa 
 condicionada respecto al coeficiente 
.

La distribución condicional para un parámetro aleatorio y la disposición a pagar se puede calcular de un modelo gmnl por medio de la función effect.gmnl(), como se muestra a continuación


```{r}
# Define parameters for the distribution
bn_size <- effect.gmnl(mixl_w, par = "size",
# Choose conditional effect
           effect = "ce")

# Create a data frame for plotting
df <- data.frame(bn_size = bn_size$mean)

# Plot
ggplot() +
   geom_density(data = df, aes(x = bn_size), fill = "#7DBE60", alpha = 0.5) +
   geom_hline(yintercept = 0) + # Add y axis
   geom_vline(xintercept = 0) + # Add x axis
   ylab("f(x)") + # Label the y axis
   xlab(expression(beta[n][wait])) + # Label the x axis
   ggtitle("Conditional distribution for size parameter")
```

La forma de la distribución sugiere que la mayoría de los grupos de viaje están formados por un pequeño número de personas.
La ubicación de la curva (media) indica el tamaño medio de los grupos de viaje.
La dispersión de la curva (desviación estándar) indica la variabilidad en el tamaño de los grupos.

El Distribución incondicional representa la distribución del parámetro de tamaño en toda la población, independientemente de cualquier otro factor.
El Distribución condicional, Por otro lado Muestra la distribución del parámetro size para un valor específico de otra variable. En este caso, Es probable que la distribución condicional se estime para un valor específico de otra variable en el modelo, como el costo del viaje, tiempo de viaje, tiempo de espera, o ingresos.




```{r}
# Define parameters for the distribution
wtp_size <- effect.gmnl(mixl_w,
par = "size",
# Effects is willingness to pay
effect = "wtp",
# With respect to vcost
wrt = "vcost")
# Create a data frame for plotting
df <- data.frame(wtp_size = wtp_size$mean)
# Plot
ggplot() +
geom_density(data = df,
aes(x = wtp_size),
fill = "orange",
alpha = 0.5) +
geom_hline(yintercept = 0) + # Add y axis
geom_vline(xintercept = 0) + # Add x axis
ylab("f(x)") + # Label the y axis
xlab(expression(WTP[n][size])) + # Label the x axis
ggtitle("Conditional willingness to pay for size parameter wrt to vcost")
```

tampoca la grafica...



--
Los modelos anteriores sugieren fuertemente que existen variaciones importantes en la forma en que los decisores responden al tiempo de espera. Sin embargo, no se utilizaron variables para caracterizar a los individuos. Como se sugirió anteriormente, la variación podría ocurrir en una dimensión socioeconómica, por ejemplo, los ingresos. En esta sección, exploraremos si la inclusión de atributos a nivel individual puede capturar la heterogeneidad en la toma de decisiones y, de ser así, en qué medida. Probaremos dos modelos diferentes, con las especificaciones que se describen a continuación. El primero es un logit multinomial con covariables a nivel individual (MNL-Covariables)

 
Este modelo es similar al logit multinomial, pero ahora considerando atributos a nivel individual. El segundo modelo también es logit multinomial con expansiones determinísticas de los coeficientes (MNL-Expansion)

```{r}
TM <- mutate(TravelMode, `wait:income` = wait * income, `travel:income` = travel * income,
             `wait:size` = wait * size, `travel:size` = travel * size)
TM <- mlogit.data(TM, choice = "choice", shape = "long", alt.levels = c("air", "train", "bus", "car"))
mnl_cov <- mlogit(choice ~ vcost + travel + wait | income + size, data = TM)

mnl_exp <- mlogit(choice ~ vcost + travel + travel:income + travel:size + wait + wait:income | 1, data = TM)

mnl_null_lo = -283.83

mnl1.summary <- rownames_to_column(data.frame(summary(mnl_cov)$CoefTable), "Variable") %>%
                transmute(Variable, Estimate, pval = `Pr...z..`)

mnl2.summary <- rownames_to_column(data.frame(summary(mnl_exp)$CoefTable), "Variable") %>%
                transmute(Variable, Estimate, pval = `Pr...z..`)

df_logit_2 <- mnl1.summary %>% full_join(mnl2.summary, by = "Variable")

kable(df_logit_2, "html", digits = 4, col.names = c("Variable", "Estimate", "p-value", "Estimate", "p-value")) %>%
kable_styling() %>% add_header_above(c(" " = 1, "MNL - Covariates" = 2, "MNL - Expansion" = 2)) %>%
footnote(general = c(paste0("Log-Likelihood: MNL - Covariates = ", round(mnl_cov$logLik[1], digits = 3),
         "; MNL - Expansion = ", round(mnl_exp$logLik[1], digits = 3)),
# Calculate McFadden's rho-2
         paste0("McFadden Adjusted Rˆ2: MNL - Covariates = ", round(1 - (mnl_cov$logLik[1] - nrow(mnl1.summary)) /
         mnl_null_lo, digits = 3), "; NL = ", round(1 - (mnl_exp$logLik[1] - nrow(mnl2.summary)) / mnl_null_lo,
         digits = 3))))


```


Ambos modelos sugieren que existe alguna heterogeneidad en el comportamiento que puede ser atribuida a las dos características de los decisores consideradas (income y party size). En particular, podemos ver a partir de los coeficientes expandidos que la desutilidad de los tiempos de viaje y espera es mayor a mayores niveles de ingreso.


```{r}
# Create a data frame for plotting
df <- data.frame(income = seq(from = min(TM$income), to = max(TM$income), by = 1)) %>%
      mutate(time = coef(mnl_exp)['travel'] + coef(mnl_exp)['travel:income'] * income,
             wait = coef(mnl_exp)['wait'] + coef(mnl_exp)['wait:income'] * income) %>%
      pivot_longer(cols = -income, names_to = "variable", values_to = "coefficient")

# Plot
ggplot(df) +
  geom_line(aes(x = income, y = coefficient, color = variable))
```

---

Volveremos a estimar los modelos logit mixtos, pero solo después de introducir las covariables de nivel individual como variables independientes y también como parte de las expansiones. La expansión del coeficiente para el tiempo de espera incluye una componente aleatoria para dar un coeficiente aleatorio de la siguiente manera:

```{r}
mixl_w1 <- gmnl(choice ~ vcost + travel + wait | income + size, data = TM, model = "mixl",
                ranp = c(wait = "n"), R = 50)
mixl_w2 <- gmnl(choice ~ vcost + travel + travel:income + travel:size + wait + wait:income | 1, data = TM,
                model = "mixl", ranp = c(wait = "n"), R = 50)
mixl_w1.summary <- rownames_to_column(data.frame(summary(mixl_w1)$CoefTable), "Variable") %>%
                   transmute(Variable, Estimate, pval = `Pr...z..`)

mixl_w2.summary <- rownames_to_column(data.frame(summary(mixl_w2)$CoefTable), "Variable") %>%
                   transmute(Variable, Estimate, pval = `Pr...z..`)

mixl_table_2 <- mixl_w1.summary %>% full_join(mixl_w2.summary, by = "Variable")

kable(mixl_table_2, "html", digits = 4, col.names = c("Variable", "Estimate", "p-value", "Estimate", "p-value")) %>%
kable_styling() %>% add_header_above(c(" " = 1, "MIXL W-1" = 2, "MIXL W-2" = 2)) %>%
footnote(general = c(paste0("Log-Likelihood: MIXL W-1 = ", round(mixl_w1$logLik$maximum, digits = 3),
         "; MIXL W-2 = ", round(mixl_w2$logLik$maximum, digits = 3)),
# Calculate McFadden's rho-2
         paste0("McFadden Adjusted Rˆ2: MIXL W-1 = ", round(1 - (mixl_w1$logLik$maximum - nrow(mixl_w1.summary)) /
         mixl0$logLik$maximum, digits = 3), "; MIXL W-2 = ", round(1 - (mixl_w2$logLik$maximum - nrow(mixl_w2.summary)) / mixl0$logLik$maximum, digits = 3))))

# Define parameters for the distribution of willingness to pay
# Obtain quartiles
q <- quantile(TM$income, c(0, 0.25, 0.5, 0.75, 1))

# Define parameters for the distribution
mu_w <- coef(mixl_w)['wait']
sigma_w <- coef(mixl_w)['sd.wait']

# First quartile
mu_w2.1 <- coef(mixl_w2)['wait'] + coef(mixl_w2)["wait:income"] * q[2]
sigma_w2.1 <- coef(mixl_w2)['sd.wait']

# Third quartile
mu_w2.3 <- coef(mixl_w2)['wait'] + coef(mixl_w2)["wait:income"] * q[4]
sigma_w2.3 <- coef(mixl_w2)['sd.wait']

# Create a data frame for plotting
df_w <- data.frame(x =seq(from = -0.6, to = 0.2, by = 0.005)) %>%
        mutate(normal = dnorm(x, mean = mu_w, sd = sigma_w))

df_w2.1 <- data.frame(x =seq(from = -0.6, to = 0.2, by = 0.005)) %>%
           mutate(normal = dnorm(x, mean = mu_w2.1, sd = sigma_w2.1))

df_w2.3 <- data.frame(x =seq(from = -0.6, to = 0.2, by = 0.005)) %>%
           mutate(normal = dnorm(x, mean = mu_w2.3, sd = sigma_w2.3))

# Plot
ggplot() +
   geom_area(data = df_w2.1, aes(x = x, y = normal), fill = "#636363", alpha = 0.3) +
   geom_line(data = df_w2.1, aes(x = x, y = normal), alpha = 0.3) +
   geom_area(data = df_w2.3, aes(x = x, y = normal), fill = "#DC4636", alpha = 0.3) +
   geom_line(data = df_w2.3, aes(x = x, y = normal), alpha = 0.3) +
   geom_line(data = df_w, aes(x = x, y =normal), linetype = 3) +
   #ylim(c(0, 1/(2 * L) + 0.2 * 1/(2 * L))) + # Set the limits of the y axis
   geom_hline(yintercept = 0) + # Add y axis
   geom_vline(xintercept = 0) + # Add x axis
   ylab("f(x)") + # Label the y axis
   ggtitle("Unconditional distribution for wait parameter (dashed line is MIXL W)")

# Define parameters for the distribution of willingness to pay
# Obtain quartiles
q <- quantile(TM$income, c(0, 0.25, 0.5, 0.75, 1))

# MIX W2 First quartile
mu_w2.1 <- (coef(mixl_w2)['wait'] + coef(mixl_w2)['wait:income'] * q[2]) * (1 / coef(mixl_w2)['vcost'])
sigma_w2.1 <- coef(mixl_w2)['sd.wait'] * sqrt((1 / coef(mixl_w2)['vcost'])^2)

# MIX W2 Third quartile
mu_w2.3 <- (coef(mixl_w2)['wait'] + coef(mixl_w2)['wait:income'] * q[4]) *
(1 / coef(mixl_w2)['vcost'])
sigma_w2.3 <- coef(mixl_w2)['sd.wait'] * sqrt((1 / coef(mixl_w2)['vcost'])^2)

# MIX W
mu_w <- coef(mixl_w)['wait'] * (1 / coef(mixl_w)['vcost'])
sigma_w <- coef(mixl_w)['sd.wait'] * sqrt((1 / coef(mixl_w)['vcost'])^2)

# Create data frames for plotting
df_w2.1 <- data.frame(x =seq(from = -10, to = 30, by = 0.1)) %>%
           mutate(normal = dnorm(x, mean = mu_w2.1, sd = sigma_w2.1))
df_w2.3 <- data.frame(x =seq(from = -10, to = 30, by = 0.1)) %>%
           mutate(normal = dnorm(x, mean = mu_w2.3, sd = sigma_w2.3))
df_w <- data.frame(x =seq(from = -10, to = 30, by = 0.1)) %>%
        mutate(normal = dnorm(x, mean = mu_w, sd = sigma_w))

# Plot
ggplot() +
   geom_area(data = df_w2.1, aes(x = x, y = normal), fill = "#636363", alpha = 0.3) +
   geom_line(data = df_w2.1, aes(x = x, y = normal), alpha = 0.3) +
   geom_area(data = df_w2.3, aes(x = x, y = normal), fill = "#DC4636", alpha = 0.3) +
   geom_line(data = df_w2.3, aes(x = x, y = normal), alpha = 0.3) +
   geom_line(data = df_w, aes(x = x, y = normal), linetype = 3) +
   #ylim(c(0, 1/(2 * L) + 0.2 * 1/(2 * L))) + # Set the limits of the y axis
   geom_hline(yintercept = 0) + # Add y axis
   geom_vline(xintercept = 0) + # Add x axis
   ylab("f(x)") + # Label the y axis
   labs(title = "Unconditional distribution for willingness to pay for wait (dashed line is MIXL W)")

```

representa la distribución incondicional del parámetro de tiempo de espera para los dos modelos logit mixtos ( y ). Muestra una curva en forma de campana, que es típica de una distribución normal.mixl_w1mixl_w2

The x-axis represents the wait time.
The y-axis represents the probability density.
Las dos distribuciones (sólida y discontinua) de la imagen tienen un aspecto similar, lo que sugiere que los modelos capturan el parámetro de tiempo de espera de forma similar.


La forma de las curvas sugiere que la mayoría de los viajeros están dispuestos a pagar alguna cantidad para reducir su tiempo de espera. pero también hay una cola significativa a la derecha de la distribución, Lo que significa que hay algunos viajeros que están dispuestos a pagar mucho para no esperar.
La ubicación de las curvas indica que la disposición promedio a pagar por el tiempo de espera es mayor para MIXL W-2 que para MIXL W-1. Esto podría deberse a diferencias en las especificaciones del modelo o en las características de los datos utilizados para estimar los modelos.







