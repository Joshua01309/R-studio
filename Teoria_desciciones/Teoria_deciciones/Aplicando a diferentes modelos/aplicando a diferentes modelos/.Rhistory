knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
library(lubridate)
library(polynom)
library(RColorBrewer)
library(plotly)
library(MASS)
library(car)
library(rgl)
knitr::knit_hooks$set(webgl = hook_webgl)
y1 <- function(t){2*exp(-4*t)-3*exp(-5*t)}
y2 <- function(t){2*exp(-4*t)-2*exp(-5*t)}
sol_graf <- ggplot()+
geom_line(aes(t, y1(t)), color="#5AA354")+
geom_line(aes(t, y2(t)), color="#E84746")+
theme_bw()
ggplotly(sol_graf)
y1 <- function(t){cos(t)+sin(t)-exp(t)+1}
y2 <- function(t){-sin(t)+cos(t)-exp(t)}
y3 <- function(t){-sin(t)+cos(t)}
sol_graf <- ggplot()+
geom_line(aes(t, y1(t)), color="azure3")+
geom_line(aes(t, y2(t)), color="lightsteelblue")+
geom_line(aes(t, y3(t)), color="pink")+
theme_bw()
ggplotly(sol_graf)
dy <- function(t,y){as.matrix(-7*y[1]+3*y[2], -2*y[1]-2*y[2])}
y0 <- as.matrix(c(-1, 0))
sol_rg <- ode45(dy, 0, 10, y0, hmax=0.01)
sol_sis <- ggplot()+
geom_line(aes(sol_rg$t, sol_rg$y[ ,1]), color="#4BBAC3")+
geom_line(aes(sol_rg$t, sol_rg$y[ ,2]), color="#CC243C")+
theme_bw()
ggplotly(sol_sis)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
library(lubridate)
library(polynom)
library(RColorBrewer)
library(plotly)
library(MASS)
library(car)
library(rgl)
knitr::knit_hooks$set(webgl = hook_webgl)
f <- function(t, u){
p <- par_prob
as.matrix(c(p[1]*(u[2]-u[1]),
u[1]*(p[2]-u[3])-u[2],
u[1]*u[2]-p[3]*u[3]))
}
u0 <- as.matrix(c(1, 0, 0))
par_prob <- c(10.0,28.0,8/3)
aprox_sist <- ode45(f, 0, 100,u0)
aprox_sist_tab <- as.data.frame(aprox_sist$y)
plot_ly(aprox_sist_tab, x = ~V1, y = ~V2, z = ~V3, type = 'scatter3d', mode = 'lines')
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
library(lubridate)
library(polynom)
library(RColorBrewer)
library(plotly)
library(MASS)
library(car)
library(rgl)
knitr::knit_hooks$set(webgl = hook_webgl)
f <- function(t, u){
p <- par_prob
as.matrix(c(p[1]*(u[2]-u[1]),
u[1]*(p[2]-u[3])-u[2],
u[1]*u[2]-p[3]*u[3]))
}
u0 <- as.matrix(c(1, 0, 0))
par_prob <- c(10.0,28.0,8/3)
aprox_sist <- ode45(f, 0, 100,u0)
aprox_sist_tab <- as.data.frame(aprox_sist$y)
plot_ly(aprox_sist_tab, x = ~V1, y = ~V2, z = ~V3, type = 'scatter3d', mode = 'lines')
y1 <- function(t){2*exp(-4*t)-3*exp(-5*t)}
y2 <- function(t){2*exp(-4*t)-2*exp(-5*t)}
sol_graf <- ggplot()+
geom_line(aes(t, y1(t)), color="#5AA354")+
geom_line(aes(t, y2(t)), color="#E84746")+
theme_bw()
ggplotly(sol_graf)
y1 <- function(t){2*exp(-4*t)-3*exp(-5*t)}
y2 <- function(t){2*exp(-4*t)-2*exp(-5*t)}
sol_graf <- ggplot()+
geom_line(aes(t, y1(t)), color="#5AA354")+
geom_line(aes(t, y2(t)), color="#E84746")+
theme_bw()
ggplotly(sol_graf)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
library(lubridate)
library(polynom)
library(RColorBrewer)
library(plotly)
library(MASS)
library(car)
library(rgl)
knitr::knit_hooks$set(webgl = hook_webgl)
f <- function(t, u){
p <- par_prob
as.matrix(c(p[1]*(u[2]-u[1]),
u[1]*(p[2]-u[3])-u[2],
u[1]*u[2]-p[3]*u[3]))
}
u0 <- as.matrix(c(1, 0, 0))
par_prob <- c(10.0,28.0,8/3)
aprox_sist <- ode45(f, 0, 100,u0)
aprox_sist_tab <- as.data.frame(aprox_sist$y)
plot_ly(aprox_sist_tab, x = ~V1, y = ~V2, z = ~V3, type = 'scatter3d', mode = 'lines')
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(discrtr) # A companion package for the book Introduction to Discrete Choice Analysis with `R`
library(mlogit) # Multinomial Logit Models
library(readr) # Read Rectangular Text Data
library(gplots) # Various R Programming Tools for Plotting Data
library(ggmosaic) # Mosaic Plots in the 'ggplot2' Framework
library(treemapify)
library(ggridges)
library(ggalluvial)
data("Car")
glimpse(Car)
Car$college <- factor(Car$college, levels = c("0", "1"), labels = c("No", "Yes"))
summary(Car)
car_alluvia <- Car |>
select(college, type1, type2, choice) |>
group_by(college, type1, type2, choice) |>
summarize(frequency = n(), .groups = "drop")
Car |> ggplot(aes(x = college)) +
geom_bar(color = "black", fill = "white") +
labs(x = "Educaci√≥n Escolar", y="Numero de encuestados")
f <- function(t, u){
p <- par_prob
as.matrix(c(p[1]*(u[2]-u[1]),
u[1]*(p[2]-u[3])-u[2],
u[1]*u[2]-p[3]*u[3]))
}
u0 <- as.matrix(c(1, 0, 0))
par_prob <- c(10.0,28.0,8/3)
aprox_sist <- ode45(f, 0, 100,u0)
aprox_sist_tab <- as.data.frame(aprox_sist$y)
plot_ly(aprox_sist_tab, x = ~V1, y = ~V2, z = ~V3, type = 'scatter3d', mode = 'lines')
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
library(lubridate)
library(polynom)
library(RColorBrewer)
library(plotly)
library(MASS)
library(car)
library(rgl)
knitr::knit_hooks$set(webgl = hook_webgl)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(pracma)
library(plotly)
library(lubridate)
library(polynom)
library(RColorBrewer)
library(plotly)
library(MASS)
library(car)
library(rgl)
knitr::knit_hooks$set(webgl = hook_webgl)
f <- function(t, u){
p <- par_prob
as.matrix(c(p[1]*(u[2]-u[1]),
u[1]*(p[2]-u[3])-u[2],
u[1]*u[2]-p[3]*u[3]))
}
u0 <- as.matrix(c(1, 0, 0))
par_prob <- c(10.0,28.0,8/3)
aprox_sist <- ode45(f, 0, 100,u0)
aprox_sist_tab <- as.data.frame(aprox_sist$y)
plot_ly(aprox_sist_tab, x = ~V1, y = ~V2, z = ~V3, type = 'scatter3d', mode = 'lines')
f <- function(t, u){
p <- par_prob
as.matrix(c(p[1]*(u[2]-u[1]),
u[1]*(p[2]-u[3])-u[2],
u[1]*u[2]-p[3]*u[3]))
}
u0 <- as.matrix(c(1, 0, 0))
par_prob <- c(10.0,28.0,8/3)
aprox_sist <- ode45(f, 0, 100,u0)
aprox_sist_tab <- as.data.frame(aprox_sist$y)
plot_ly(aprox_sist_tab, x = ~V1, y = ~V2, z = ~V3, type = 'scatter3d', mode = 'lines')
