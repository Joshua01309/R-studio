"0","# Define desired market share for heat pumps"
"0","target_hp_share <- 0.1"
"0",""
"0","# Reduced installation cost for heat pumps with rebate"
"0","rebate_factor <- 0.9  # Adjust this value to simulate different rebate levels"
"0",""
"0","H_rebate <- Heating %>% mutate(ic.hp = rebate_factor * ic.hp)"
"0",""
"0","# Function to calculate heat pump probability"
"0","get_hp_prob <- function(data) {"
"0","  model_pred <- predict(model3, newdata = mlogit.data(data, shape = ""wide"", choice = ""depvar"", varying = c(3:12)))"
"0","  return(mean(model_pred[, ""hp""]))"
"0","}"
"0",""
"0","# Calculate heat pump probability before and after rebate"
"0","hp_prob_before <- get_hp_prob(Heating)"
"0","hp_prob_after <- get_hp_prob(H_rebate)"
"0",""
"0","# Check if target share is reached with current rebate"
"0","if (hp_prob_after >= target_hp_share) {"
"0","  cat(""Rebate of"", (1 - rebate_factor) * 100, ""% is sufficient to achieve target share."")"
"0","} else {"
"0","  cat(""Rebate of"", (1 - rebate_factor) * 100, ""% is not enough. Consider simulating with higher rebate."")"
"0","}"
"1","Rebate of"
"1"," "
"1","10"
"1"," "
"1","% is not enough. Consider simulating with higher rebate."
"0","# Optional: Simulate with different rebates"
"0","# You can create a loop to iterate through different rebate_factor values"
"0","# and compare the resulting hp_prob_after with the target_hp_share."
"0",""
