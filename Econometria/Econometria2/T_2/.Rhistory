knitr::opts_chunk$set(echo = TRUE)
v <- ts(sample(0:1,10, replace =TRUE)*2-1)
v
plot(v)
v <- ts(sample(0:1,10, replace =TRUE)*2-1)
v
plot(v)
x<-numeric(100)
for (t in 2:100) {
x[t]<-x[t-1]+v[t]
}
plot(x)
v <- ts(sample(0:1,10, replace =TRUE)*2-1)
v
plot(v)
x<-numeric(100)
for (t in 2:100) {
x[t]<-x[t-1]+v[t]
}
plot(x, type = 'l')
v <- ts(sample(0:1,10, replace =TRUE)*2-1)
v
plot(v)
x<-numeric(100)
for (t in 2:100) {
x[t]<-x[t-1]+v[t]
}
plot(x, type = 'l')
v <- ts(sample(0:1,10, replace =TRUE)*2-1)
v
plot(v)
x<-numeric(100)
for (t in 2:100) {
x[t]<-x[t-1]+v[t]
}
plot(x, type = 'l')
rnorm(1)
rnorm(1)
rnorm(1)
1. Realiza una grÃ¡fica con los primeros 10 valores de las ecuaciones de diferencias.
rnorm(1)
v <- ts(sample(0:1,10, replace =TRUE)*2-1)
v
plot(v)
x<-numeric(100)
for (t in 2:100) {
x[t]<-x[t-1]+v[t]
}
plot(x, type = 'l')
v <- ts(sample(0:1,10, replace =TRUE)*2-1)
v
plot(v)
x<-numeric(10)
for (t in 2:100) {
x[t]<-x[t-1]+v[t]
}
plot(x, type = 'l')
v <- ts(sample(0:1,10, replace =TRUE)*2-1)
v
plot(v)
x<-numeric(10)
for (t in 2:10) {
x[t]<-x[t-1]+v[t]
}
plot(x, type = 'l')
plot(w)
w<-rnorm(1)
plot(w)
w<-rnorm(100)
plot(w)
w<-ts(rnorm(100))
w<-ts(rnorm(100))
plot(w)
w<-ts(rnorm(100))
plot(w)
w<-ts(rnorm(100))
plot(w)
x <- numeric(100)
#Caminata aleatoria
for(t in 2:100)
x[t]<-x[t-1] + w[t]
w<-ts(rnorm(100))
plot(w)
x <- ts(numeric(100))
#Caminata aleatoria
for(t in 2:100)
x[t]<-x[t-1] + w[t]
w<-ts(rnorm(100))
plot(w)
x <- ts(numeric(100))
#Caminata aleatoria
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
v <- ts(sample(0:1,10, replace =TRUE)*2-1)
v
plot(v)
x<-numeric(1000)
for (t in 2:1000) {
x[t]<-x[t-1]+v[t]
}
plot(x, type = 'l')
v <- ts(sample(0:1,10, replace =TRUE)*2-1)
v
plot(v)
x<-numeric(10)
for (t in 2:1000) {
x[t]<-x[t-1]+v[t]
}
plot(x, type = 'l')
v <- ts(sample(0:1,10, replace =TRUE)*2-1)
v
plot(v)
x<-numeric(10000)
for (t in 2:10) {
x[t]<-x[t-1]+v[t]
}
plot(x, type = 'l')
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- numeric(1000)
for (y in 3:1000) {
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
plot(y, type = 'l')
}
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- numeric(1000)
for (y in 3:1000) {
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
plot(y, type = 'l')
}
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- numeric(1000)
for (t in 3:1000) {
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
plot(y, type = 'l')
}
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- numeric(1000)
for (t in 3:10) {
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
plot(y, type = 'l')
}
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- numeric(1000)
for (t in 3:10) {
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
}
plot(y, type = 'l')
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- numeric(1000)
for (t in 3:1000) {
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
}
plot(y, type = 'l')
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- numeric(1000)
for (t in 3:1000)
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
plot(y, type = 'l')
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- numeric(1000)
for (t in 3:1000)
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
plot(y, type = 'l')
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- ts(numeric(1000))
for (t in 3:1000)
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
plot(y)
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- ts(numeric(1000))
for (t in 3:1000)
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
plot(y)
# Autoregresivo
z <- ts(numeric(1000))
for (t in 3:1000) {
z[t]<-1/4*z[t-1]+1/3*z[t-2]+w[t]
}
plot(z)
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- ts(numeric(1000))
for (t in 3:1000)
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
plot(y)
# Autoregresivo
z <- ts(numeric(1000))
for (t in 3:1000)
z[t]<-1/4*z[t-1]+1/3*z[t-2]+w[t]
plot(z)
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- ts(numeric(1000))
for (t in 3:1000)
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
plot(y)
# Autoregresivo
z <- ts(numeric(1000))
for (t in 3:1000)
z[t]<-1/4*z[t-1]+1/3*z[t-2]+w[t]
plot(z)
z <- ts(numeric(1000))
for (t in 3:1000)
z[t]<-1/4*z[t-1]+1/3*z[t-2]+w[t]
plot(z)
x <- numeric(100)
for (t in 3:100) {
x[t]<- w[t]
}
x <- numeric(100)
for (t in 3:100) {
x[t]<- w[t]
}
plot(x, type = 'l')
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- ts(numeric(1000))
for (t in 3:1000)
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
plot(y)
# Autoregresivo
z <- ts(numeric(1000))
for (t in 3:1000)
z[t]<-1/4*z[t-1]+1/3*z[t-2]+w[t]
plot(z)
x <- numeric(1000)
for (t in 3:1000) {
x[t]<- w[t]
}
plot(x, type = 'l')
x <- numeric(100)
for (t in 3:100) {
x[t]<- w[t]
}
mean(x)
x <- numeric(100)
for (t in 3:100) {
x[t]<- x[t-1] + w[t]
}
plot(x, type = 'l')
# Ruido blanco
w<-ts(rnorm(100))
plot(w)
# Caminata aleatoria
x <- ts(numeric(100))
for(t in 2:100)
x[t]<-x[t-1] + w[t]
plot(x)
# MA
y <- ts(numeric(100))
for (t in 3:100)
y[t]<-1/2*w[t-1]+1/2*w[t-2]+w[t]
plot(y)
# Autoregresivo
z <- ts(numeric(100))
for (t in 3:100)
z[t]<-1/4*z[t-1]+1/3*z[t-2]+w[t]
plot(z)
x <- numeric(1000)
for (t in 3:1000) {
x[t]<-x[t-1] + w[t]
}
plot(x, type = 'l')
x <- numeric(100)
for (t in 3:100) {
x[t]<- x[t-1] + w[t]
}
mean(x)
x <- numeric(100)
for (t in 3:100) {
x[t]<- w[t]
}
mean(x[t])
x <- numeric(100)
for (t in 3:100) {
x[t]<- x[t-1] + w[t]
}
mean(x[t])
x <- numeric(1000)
for (t in 3:1000)
x[t]<- (1/2)*w[t-3]-(1/3)*w[t-2]-(1/4)*w[t-1]+w[t]
x <- numeric(1000)
for (t in 3:1000)
x[t]<- (1/2)*w[t-3]-(1/3)*w[t-2]-(1/4)*w[t-1]+w[t]
x <- numeric(1000)
for (t in 3:1000)
x[t]<- (1/2)*w[t-3]-(1/3)*w[t-2]-(1/4)*w[t-1]+ w[t]
x <- numeric(100)
for (t in 3:100) {
x[t]<- (1/2)*w[t-3]-(1/3)*w[t-2]-(1/4)*w[t-1]+w[t]
}
x <- numeric(1000)
for (t in 4:1000)
x[t]<- (1/2)*w[t-3]-(1/3)*w[t-2]-(1/4)*w[t-1]+ w[t]
plot(x, type = 'l')
x <- numeric(100)
for (t in 1:100) {
x[t]<- w[t]
}
plot(x, type = 'l')
x <- numeric(100)
for (t in 4:100) {
x[t]<- w[t]
}
mean(x[t])
x <- numeric(100)
for (t in 4:100) {
x[t]<- (1/2)*w[t-3]-(1/3)*w[t-2]-(1/4)*w[t-1]+w[t]
}
plot(x, type = 'l')
x <- numeric(100)
for (t in 2:100) {
x[t]<- -(1/2)*x[t-1] + w[t]
}
plot(x, type = 'l')
x <- numeric(100)
for (t in 4:100) {
x[t]<- -(1/2)*x[t-1] + w[t]
}
mean(x[t])
x <- numeric(1000)
for (t in 4:1000)
x[t]<- -(1/2)*x[t-1] + w[t]
plot(x, type = 'l')
x <- numeric(100)
for (t in 1:100)
x1<-x[t]<- w[t]
mean(x1)
x <- numeric(100)
for (t in 2:100) {
x[t]<- x[t-1] - x[t-2] + w[t]
}
x <- numeric(100)
for (t in 3:100) {
x[t]<- x[t-1] - x[t-2] + w[t]
}
plot(x, type = 'l')
x <- numeric(1000)
for (t in 4:1000)
x[t]<- x[t-1] - x[t-2] + w[t]
plot(x, type = 'l')
x <- numeric(100)
for (t in 4:100) {
x[t]<- x[t-1] - x[t-2] + w[t]
}
mean(x[t])
x <- numeric(100)
for (t in 3:100) {
x[t]<- (1/2)*x[t-1] - (1/2)*x[t-2] + w[t]
}
plot(x, type = 'l')
x <- numeric(1000)
for (t in 3:1000)
x[t]<- (1/2)*x[t-1] - (1/2)*x[t-2] + w[t]
plot(x, type = 'l')
x <- numeric(100)
for (t in 4:100) {
x[t]<- (1/2)*x[t-1] - (1/2)*x[t-2] + w[t]
}
mean(x[t])
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
tabla1 <- read.csv("archivo.csv")
